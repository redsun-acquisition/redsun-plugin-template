from __future__ import annotations

from typing import Any, Union

from bluesky.protocols import Location

from sunflare.engine import {{ plugin_base }}, Status

from .config import {{ config_info }}


class {{ class_baseline }}({{ plugin_base }}[{{ config_info }}]):
    def __init__(self, name: str, model_info: {{ config_info }}) -> None:
        
        # initialize your motor API via
        # whatever python package it uses
        super().__init__(name, model_info)

    def shutdown(self) -> None:
        """Shutdown the motor.

        Optional method.
        Implement this to for graceful shutdown.
        """
        raise NotImplementedError()

    def set(self, value: Union[float, int, str], *args, **kwargs) -> Status:
        """Return a ``Status`` that is marked done when the device is done moving."""
        raise NotImplementedError()

    def locate(self) -> Location[Union[float, int, str]]:
        """Return the current location of a Device.

        While a ``Readable`` reports many values, a ``Movable`` will have the
        concept of location. This is where the Device currently is, and where it
        was last requested to move to. This protocol formalizes how to get the
        location from a ``Movable``.
        """
        raise NotImplementedError()

